[tool.poetry]
name = "reptar"
version = "0.0.0"
description = "Compute, store, and analyze manuscript-scale data for computational chemistry and biology"
authors = [
    "OASCI <us@oasci.org>",
]
license = "MIT"
readme = "README.md"
repository = "https://github.com/oasci/reptar"
homepage = "https://reptar.oasci.org"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: System :: Archiving",
]

[tool.poetry.scripts]
reptar-calc = "reptar.calculators.run:main"
reptar-geometry-scan = "reptar.structure.scan:main"
reptar-xyz-to-file = "reptar.writers.xyz:main_xyz_to_file"
reptar-write-xyz = "reptar.writers.xyz:main_write_xyz"

[tool.poetry.dependencies]
python = "<3.13,>=3.9"
numpy = "^1.26.0"
pyyaml = "^6.0.1"
scipy = "^1.11.3"
cclib = "^1.8"
qcelemental = "^0.26.0"
ase = "^3.22.1"

[tool.poetry.dependencies.ray]
extras = [
    "data",
]
version = "^2.7.0"

[tool.poetry.group.dev.dependencies]
poetry = "^1.6.1"
black = "^23.9.0"
isort = "^5.12.0"
pre-commit = "^3.4.0"
pylint = "^2.17.6"
bandit = "^1.7.5"
mypy = "^1.5.1"
mypy-extensions = "^1.0.0"
pyupgrade = "^3.10.1"
safety = "^2.3.5"
exdir = "^0.5.0.1"
zarr = "^2.16.1"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.2"
pytest-cov = "^4.1.0"
coverage = "^7.3.1"
pytest-html = "^4.0.1"
colorama = "^0.4.6"
pytest-order = "^1.1.0"
pytest-dependency = "^0.5.1"

[tool.poetry.group.docs.dependencies]
sphinx-multiversion = "^0.2.4"
furo = "^2023.9.10"
sphinx-design = "^0.5.0"
sphinxcontrib-mermaid = "^0.9.2"
sphinxemoji = "^0.2.0"
sphinx-autoapi = "^2.1.1"
sphinx-autodoc-typehints = "^1.24.0"
sphinx-copybutton = "^0.5.2"
myst-parser = "^2.0.0"
pydocstyle = "^6.3.0"
sphinxext-rediraffe = "^0.2.7"
sphinx-togglebutton = "^0.3.2"
sphinxcontrib-bibtex = "^2.6.1"
sphinx-inline-tabs = "^2023.4.21"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
format-jinja = "    {%- if distance == 0 -%}\n        {{ serialize_pep440(base) }}\n    {%- else -%}\n        {{ serialize_pep440(base, post=distance) }}\n    {%- endif -%}\n"

[tool.poetry-dynamic-versioning.substitution]
patterns = [
    "(^__version__\\s*(?::.*?)?=\\s*['\"])[^'\"]*(['\"])",
]
folders = [
    { path = "reptar" },
]

[tool.poetry-version-plugin]
source = "versioneer"

[tool.pylint.messages_control]
good-names = [
    "i",
    "j",
    "k",
    "e",
    "_",
    "Z",
    "z",
    "R",
    "r",
    "E",
    "e",
    "G",
    "g",
    "F",
    "f",
    "n",
    "Q",
    "q",
    "d",
    "v",
    "ex",
    "Run",
    "db",
    "Z_source",
    "R_source",
    "E_source",
    "G_source",
    "Z_sample",
    "R_sample",
    "E_sample",
    "G_sample",
    "R_selection",
    "E_selection",
    "G_selection",
    "R_source_idxs",
    "R_selection_idx",
    "n_Z",
    "n_R",
    "R_masses",
    "File_",
]
ignore = [
    "CVS",
    "_version.py",
    "conf.py",
]
jobs = 0
py-version = 3.9
argument-naming-style = "snake_case"
attr-naming-style = "snake_case"
class-const-naming-style = "UPPER_CASE"
class-naming-style = "PascalCase"
const-naming-style = "UPPER_CASE"
function-naming-style = "snake_case"
disable = [
    "raw-checker-failed",
    "bad-inline-option",
    "locally-disabled",
    "file-ignored",
    "suppressed-message",
    "useless-suppression",
    "deprecated-pragma",
    "use-symbolic-message-instead",
    "too-many-arguments",
    "too-many-public-methods",
    "missing-module-docstring",
    "missing-function-docstring",
    "too-many-lines",
    "fixme",
    "too-many-instance-attributes",
    "too-few-public-methods",
    "too-many-locals",
    "attribute-defined-outside-init",
    "broad-except",
    "import-error",
]

[tool.black]
target-version = [
    "py311",
]
line-length = 88
color = true
exclude = "/(\n    \\.git\n    | \\.hg\n    | \\.mypy_cache\n    | \\.tox\n    | \\.venv\n    | _build\n    | buck-out\n    | build\n    | dist\n    | env\n    | venv\n)/\n"

[tool.isort]
py_version = 311
line_length = 88
known_typing = [
    "typing",
    "types",
    "typing_extensions",
    "mypy",
    "mypy_extensions",
]
sections = [
    "FUTURE",
    "TYPING",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER",
]
profile = "black"
include_trailing_comma = true
multi_line_output = 3
indent = 4
color_output = true
skip = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.mypy]
python_version = 3.11
pretty = true
show_traceback = true
color_output = true
allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
norecursedirs = [
    "reptar",
    "hooks",
    "*.egg",
    ".eggs",
    "dist",
    "build",
    "docs",
    ".tox",
    ".git",
    "__pycache__",
]
doctest_optionflags = [
    "NUMBER",
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
]
addopts = [
    "--strict-markers",
    "--tb=short",
    "--doctest-modules",
    "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = [
    "tests",
]

[build-system]
requires = [
    "poetry-core>=1.0.0",
    "poetry-dynamic-versioning>=1.0.0,<2.0.0",
]
build-backend = "poetry_dynamic_versioning.backend"

[coverage.paths]
source = "reptar"

[coverage.run]
branch = true
omit = [
    "*/__init__.py",
    "*/_version.py",
]

[coverage.report]
fail_under = 50
show_missing = true

["tool.poetry.group.conda.dependencies"]
appdirs = "^1.4.4"
Brotli = "^1.1.0"
build = "^1.0.3"
CacheControl = "^0.13.1"
cachy = "^0.3.0"
certifi = "^2023.7.22"
cffi = "^1.16.0"
cfgv = "^3.3.1"
charset-normalizer = "^3.3.2"
cleo = "^2.1.0"
click = "^8.1.7"
click-default-group = "^1.2.4"
clikit = "^0.6.2"
colorama = "^0.4.6"
conda_lock = "^2.4.2"
conda_poetry_liaison = "^0.1.2"
crashtest = "^0.4.1"
cryptography = "^41.0.5"
distlib = "^0.3.7"
dulwich = "^0.21.6"
ensureconda = "^1.4.3"
fastjsonschema = "^2.18.1"
filelock = "^3.13.1"
gitdb = "^4.0.11"
GitPython = "^3.1.40"
html5lib = "^1.1"
identify = "^2.5.31"
idna = "^3.4"
importlib-metadata = "^6.8.0"
installer = "^0.7.0"
"jaraco.classes" = "^3.3.0"
jeepney = "^0.8.0"
Jinja2 = "^3.1.2"
keyring = "^24.2.0"
MarkupSafe = "^2.1.3"
more-itertools = "^10.1.0"
msgpack = "^1.0.6"
networkx = "^3.2.1"
nodeenv = "^1.8.0"
numpy = "^1.26.0"
OptKing = "^0.2.1"
packaging = "^23.2"
pastel = "^0.2.1"
pexpect = "^4.8.0"
Pint = "^0.22"
pip = "^23.3.1"
pkginfo = "^1.9.6"
platformdirs = "^3.11.0"
poetry = "^1.7.0"
poetry-core = "^1.8.1"
poetry-plugin-export = "^1.6.0"
pre-commit = "^3.5.0"
psutil = "^5.9.5"
ptyprocess = "^0.7.0"
py-cpuinfo = "^9.0.0"
pycparser = "^2.21"
pydantic = "^2.4.2"
pydantic_core = "^2.10.1"
pylev = "^1.4.0"
pyproject_hooks = "^1.0.0"
PySocks = "^1.7.1"
PyYAML = "^6.0.1"
qcelemental = "^0.27.1"
qcengine = "^0.29.0"
rapidfuzz = "^3.5.2"
requests = "^2.31.0"
requests-toolbelt = "^1.0.0"
"ruamel.yaml" = "^0.18.5"
"ruamel.yaml.clib" = "^0.2.7"
scipy = "^1.11.3"
SecretStorage = "^3.3.3"
setuptools = "^68.2.2"
shellingham = "^1.5.4"
six = "^1.16.0"
smmap = "^5.0.0"
tomli = "^2.0.1"
tomli_w = "^1.0.0"
tomlkit = "^0.12.2"
toolz = "^0.12.0"
trove-classifiers = "^2023.11.7"
typing_extensions = "^4.8.0"
ukkonen = "^1.0.1"
urllib3 = "^1.26.18"
virtualenv = "^20.24.6"
webencodings = "^0.5.1"
wheel = "^0.41.3"
zipp = "^3.17.0"
