[tool.poetry]
name = "reptar"
version = "0"
description = "Compute, store, and analyze manuscript-scale data for computational chemistry and biology"
authors = [
  "Alex M. Maldonado <alex@oasci.org>"
]
license = "MIT"
readme = "README.md"
repository = "https://github.com/oasci/reptar"
homepage = "https://reptar.oasci.org"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: System :: Archiving",
]
# Change get_config() in _version.py to change any options like style


[tool.poetry.scripts]
reptar-calc = "reptar.calculators.run:main"
reptar-geometry-scan = "reptar.structure.scan:main"
reptar-xyz-to-file = "reptar.writers.xyz:main_xyz_to_file"
reptar-write-xyz = "reptar.writers.xyz:main_write_xyz"


[tool.poetry.dependencies]
python = "<3.13,>=3.9"
numpy = "^1.26.0"
pyyaml = "^6.0.1"
scipy = "^1.11.3"
cclib = "^1.8"
qcelemental = "^0.26.0"
ase = "^3.22.1"
ray = {extras = ["data"], version = "^2.7.0"}


[tool.poetry.group.dev.dependencies]
poetry = "^1.6.1"
black = "^23.9.0"
isort = "^5.12.0"
pre-commit = "^3.4.0"
pylint = "^2.17.6"
bandit = "^1.7.5"
mypy = "^1.5.1"
mypy-extensions = "^1.0.0"
pyupgrade = "^3.10.1"
safety = "^2.3.5"
exdir = "^0.5.0.1"
zarr = "^2.16.1"


[tool.poetry.group.test.dependencies]
pytest = "^7.4.2"
pytest-cov = "^4.1.0"
coverage = "^7.3.1"
pytest-html = "^4.0.1"
colorama = "^0.4.6"
pytest-order = "^1.1.0"
pytest-dependency = "^0.5.1"


[tool.poetry.group.docs.dependencies]
poetry-version-plugin = {git = "https://github.com/oasci/poetry-version-plugin", rev = "support-versioneer"}
sphinx-multiversion = "^0.2.4"
furo = "^2023.9.10"
sphinx-design = "^0.5.0"
sphinxcontrib-mermaid = "^0.9.2"
sphinxemoji = "^0.2.0"
sphinx-autoapi = "^2.1.1"
sphinx-autodoc-typehints = "^1.24.0"
sphinx-copybutton = "^0.5.2"
myst-parser = "^2.0.0"
pydocstyle = "^6.3.0"
sphinxext-rediraffe = "^0.2.7"
sphinx-togglebutton = "^0.3.2"
sphinxcontrib-bibtex = "^2.6.1"
sphinx-inline-tabs = "^2023.4.21"


[build-system]
requires = ["poetry-core",]
build-backend = "poetry.core.masonry.api"


[tool.poetry-version-plugin]
source = "versioneer"


[tool.pylint.messages_control]
# https://pylint.readthedocs.io/en/latest/
good-names = [
  "i",
  "j",
  "k",
  "e",
  "_",
  "Z",
  "z",
  "R",
  "r",
  "E",
  "e",
  "G",
  "g",
  "F",
  "f",
  "n",
  "Q",
  "q",
  "d",
  "v",
  "ex",
  "Run",
  "db",
  "Z_source",
  "R_source",
  "E_source",
  "G_source",
  "Z_sample",
  "R_sample",
  "E_sample",
  "G_sample",
  "R_selection",
  "E_selection",
  "G_selection",
  "R_source_idxs",
  "R_selection_idx",
  "n_Z",
  "n_R",
  "R_masses",
  "File_"
]
ignore = ["CVS", "_version.py", "conf.py"]
jobs = 0
py-version = 3.9
argument-naming-style = "snake_case"
attr-naming-style = "snake_case"
class-const-naming-style = "UPPER_CASE"
class-naming-style = "PascalCase"
const-naming-style = "UPPER_CASE"
function-naming-style = "snake_case"
disable = [
  "raw-checker-failed",
  "bad-inline-option",
  "locally-disabled",
  "file-ignored",
  "suppressed-message",
  "useless-suppression",
  "deprecated-pragma",
  "use-symbolic-message-instead",
  "too-many-arguments",
  "too-many-public-methods",
  "missing-module-docstring",
  "missing-function-docstring",
  "too-many-lines",
  "fixme",
  "too-many-instance-attributes",
  "too-few-public-methods",
  "too-many-locals",
  "attribute-defined-outside-init",
  "broad-except",
  "import-error"
]

[tool.black]
# https://github.com/psf/black
target-version = ["py311"]
line-length = 88
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''


[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 311
line_length = 88

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
profile = "black"
include_trailing_comma = true
multi_line_output = 3
indent = 4
color_output = true
skip = [
  '.bzr',
  '.direnv',
  '.eggs',
  '.git',
  '.hg',
  '.mypy_cache',
  '.nox',
  '.pants.d',
  '.svn',
  '.tox',
  '.venv',
  '__pypackages__',
  '_build',
  'buck-out',
  'build',
  'dist',
  'node_modules',
  'venv',
]


[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.11
pretty = true
show_traceback = true
color_output = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["reptar", "hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]


[tool.coverage.run]
source = ["tests"]


[coverage.paths]
source = "reptar"


[coverage.run]
branch = true
omit = [
  "*/__init__.py",
  "*/_version.py",
]

[coverage.report]
fail_under = 50
show_missing = true

[virtualenvs]
path = ".venv/"
create = false
in-project = false
